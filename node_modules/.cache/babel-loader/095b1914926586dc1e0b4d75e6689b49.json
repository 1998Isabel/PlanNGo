{"ast":null,"code":"var _jsxFileName = \"/Users/isabel/Desktop/PlanNGo/src/containers/Login.js\";\nimport React from 'react';\nimport CryptoJS from 'crypto-js';\nimport Fab from '@material-ui/core/Fab';\nimport TextField from '@material-ui/core/TextField';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport { withStyles } from '@material-ui/styles';\nimport { withApollo } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { LOGIN_MATCH } from '../graphql/queries';\nconst styles = {\n  fab: {\n    margin: 1\n  },\n  extendedIcon: {\n    marginRight: 1\n  },\n  loginWrapper: {\n    marginTop: 3\n  },\n  outterWrapper: {\n    margin: 0\n  },\n  innerWrapper: {\n    marginTop: 180,\n    textAlign: \"center\"\n  },\n  textField: {\n    marginLeft: 1,\n    marginRight: 1\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  input: {\n    color: \"rgba(255, 255, 255, 0.65)\"\n  },\n  cssLabel: {\n    color: \"rgba(255, 255, 255, 0.65)\"\n  },\n  cssFocused: {\n    color: \"white\"\n  } // cssOutlinedInput: {\n  //     '&$cssFocused $notchedOutline': {\n  //       borderColor: `${theme.palette.primary.main} !important`,\n  //     }\n  //   },\n  // notchedOutline: {\n  //     borderWidth: '1px',\n  //     borderColor: 'green !important'\n  // },\n\n};\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserChange = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handlePasswordChange = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      const IDandPassword = this.state.username + this.state.password;\n      const myHash = CryptoJS.SHA256(IDandPassword).toString(CryptoJS.enc.Hex);\n      console.log(\"ID and Hash\", IDandPassword, myHash);\n      this.props.client.query({\n        fetchPolicy: 'network-only',\n        query: LOGIN_MATCH,\n        variables: {\n          hash: myHash\n        }\n      }).then(result => {\n        if (result.data.loginMatch) {\n          this.props.setUser(myHash);\n          this.props.history.push('/main');\n        } else {\n          this.setState({\n            error: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: false\n    };\n  }\n\n  componentDidMount() {// resetStore   \n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.outWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.innerWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-project-input\",\n      label: \"Project Name\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: this.handleUserChange,\n      InputProps: {\n        className: classes.input,\n        //root: classes.cssOutlinedInput,\n        focused: classes.cssFocused //notchedOutline: classes.notchedOutline,\n\n      },\n      InputLabelProps: {\n        classes: {\n          root: classes.cssLabel,\n          focused: classes.cssFocused\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-password-input\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      autoComplete: \"current-password\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: this.handlePasswordChange,\n      InputProps: {\n        className: classes.input\n      },\n      InputLabelProps: {\n        classes: {\n          root: classes.cssLabel,\n          focused: classes.cssFocused\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.loginWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Fab, {\n      onClick: this.onSubmit,\n      variant: \"extended\",\n      \"aria-label\": \"login\",\n      className: classes.fab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(NavigationIcon, {\n      className: classes.extendedIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), \"Login\")), this.state.error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"username or password incorrect\")));\n  }\n\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withApollo(withRouter(withStyles(styles)(Login)));","map":{"version":3,"sources":["/Users/isabel/Desktop/PlanNGo/src/containers/Login.js"],"names":["React","CryptoJS","Fab","TextField","NavigationIcon","withStyles","withApollo","PropTypes","withRouter","LOGIN_MATCH","styles","fab","margin","extendedIcon","marginRight","loginWrapper","marginTop","outterWrapper","innerWrapper","textAlign","textField","marginLeft","link","textDecoration","input","color","cssLabel","cssFocused","Login","Component","constructor","props","handleUserChange","e","setState","username","target","value","handlePasswordChange","password","onSubmit","IDandPassword","state","myHash","SHA256","toString","enc","Hex","console","log","client","query","fetchPolicy","variables","hash","then","result","data","loginMatch","setUser","history","push","error","componentDidMount","render","classes","outWrapper","container","className","focused","root","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CryptoJS from 'crypto-js';\nimport Fab from '@material-ui/core/Fab';\nimport TextField from '@material-ui/core/TextField';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport { withStyles } from '@material-ui/styles';\nimport { withApollo } from 'react-apollo';\nimport PropTypes from 'prop-types'\nimport {withRouter} from 'react-router-dom'\nimport { LOGIN_MATCH } from '../graphql/queries';\nconst styles = {\n    fab: {\n      margin: 1\n    },\n    extendedIcon:{\n      marginRight: 1\n    },\n    loginWrapper:{\n      marginTop: 3\n    },\n    outterWrapper:{\n        margin: 0 \n    },\n    innerWrapper:{\n        marginTop: 180,\n        textAlign: \"center\"\n    },\n    textField:{\n        marginLeft: 1,\n        marginRight: 1\n      },\n    link:{\n        textDecoration: \"none\"\n    },\n    input:{\n        color:\"rgba(255, 255, 255, 0.65)\"\n    },\n    cssLabel:{\n        color:\"rgba(255, 255, 255, 0.65)\"\n    },\n    cssFocused:{\n        color:\"white\"\n    },\n    // cssOutlinedInput: {\n    //     '&$cssFocused $notchedOutline': {\n    //       borderColor: `${theme.palette.primary.main} !important`,\n    //     }\n    //   },\n    \n    // notchedOutline: {\n    //     borderWidth: '1px',\n    //     borderColor: 'green !important'\n    // },\n}\n\nclass Login extends React.Component{\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            username: \"\",\n            password: \"\",\n            error: false\n        }\n    }\n    componentDidMount(){\n        // resetStore   \n    }\n    handleUserChange = e => {\n        this.setState({\n        username : e.target.value\n    })} \n\n    handlePasswordChange = e => {this.setState({\n        password : e.target.value\n    })} \n      \n    onSubmit = e => {\n        const IDandPassword = this.state.username + this.state.password\n        const myHash = CryptoJS.SHA256(IDandPassword).toString(CryptoJS.enc.Hex)\n        console.log(\"ID and Hash\",IDandPassword,myHash)\n        this.props.client.query({fetchPolicy: 'network-only', query: LOGIN_MATCH, variables:{hash: myHash}}).then(result => {\n            if(result.data.loginMatch){\n                this.props.setUser(myHash)\n                this.props.history.push('/main')\n            }\n            else{\n                this.setState({\n                    error: true\n                })\n            }  \n        })\n    }\n    render(){\n        const {classes} = this.props\n        return(\n            <div className={classes.outWrapper}>\n                <div className={classes.innerWrapper}>\n                    <form className={classes.container} noValidate autoComplete=\"off\">\n                    <div><TextField\n                            id=\"outlined-project-input\"\n                            label=\"Project Name\"\n                            className={classes.textField}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.handleUserChange}\n                            InputProps={{\n                                className: classes.input,\n                                //root: classes.cssOutlinedInput,\n                                focused: classes.cssFocused,\n                                //notchedOutline: classes.notchedOutline,\n                            }}\n                            InputLabelProps={{\n                                classes: {\n                                root: classes.cssLabel,\n                                focused: classes.cssFocused,\n                                },\n                            }}\n                        /></div>\n                    <div><TextField\n                            id=\"outlined-password-input\"\n                            label=\"Password\"\n                            className={classes.textField}\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            onChange={this.handlePasswordChange}\n                            InputProps={{\n                                className: classes.input\n                            }}\n                            InputLabelProps={{\n                                classes: {\n                                root: classes.cssLabel,\n                                focused: classes.cssFocused,\n                                },\n                            }}\n                        /></div>\n                    </form>\n                    <div className={classes.loginWrapper}>\n                        <Fab onClick={this.onSubmit} variant=\"extended\" aria-label=\"login\" className={classes.fab}>\n                            <NavigationIcon className={classes.extendedIcon} />Login\n                        </Fab>\n                    </div>\n                    {this.state.error && <span>username or password incorrect</span>}\n                </div>\n            </div>\n        )\n    }\n  \n        \n}\n\nLogin.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withApollo(withRouter(withStyles(styles)(Login)));"]},"metadata":{},"sourceType":"module"}