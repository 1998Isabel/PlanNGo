{"ast":null,"code":"import _objectSpread from \"/Users/isabel/Desktop/PlanNGo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/isabel/Desktop/PlanNGo/src/containers/Main.js\";\nimport React, { Component } from 'react'; // import socketIOClient from \"socket.io-client\";\n\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './../App.css';\nimport Schedule from './schedule/Schedule';\nimport Spots from './spots/Spots';\nimport Map from './map/Map'; // import Map from './map/GmapObj' //for testing\n\nimport { Redirect } from 'react-router-dom';\nimport initial_state from '../Initial';\nimport { Mutation } from 'react-apollo';\nimport { UPDATE_DND_ITEM } from '../graphql';\nimport { withApollo } from 'react-apollo';\n\nfunction IndexofProperty(array, attr, value) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction FindCol(s) {\n  let tmp = parseInt(s.substring(s.lastIndexOf('-') + 1), 10);\n  return tmp;\n}\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = (id, colid) => {\n      console.log(id, colid);\n      let col; // if (colid === \"droppable-4\") col = {...this.state.schedule_columns};\n\n      if (FindCol(colid) >= 4) col = _objectSpread({}, this.state.schedule_columns);else col = _objectSpread({}, this.state.spots_columns);\n\n      let items = _objectSpread({}, this.state.items);\n\n      let update_col = col;\n      let update_items = items;\n      let item_idx = IndexofProperty(col[colid].items, 'id', id);\n\n      if (item_idx !== -1) {\n        delete update_items[id];\n        update_col[colid].items.splice(item_idx, 1);\n        console.log(update_items);\n        console.log(update_col); // if (colid === \"droppable-4\") {\n\n        if (FindCol(colid) >= 4) {\n          this.setState({\n            schedule_columns: update_col,\n            items: update_items\n          });\n        } else {\n          this.setState({\n            spots_columns: update_col,\n            items: update_items\n          });\n        }\n      }\n    };\n\n    this.onDragEnd = result => {\n      const destination = result.destination,\n            source = result.source,\n            draggableId = result.draggableId;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      this.props.socket.emit(\"resetRoute\", \"reset from drag\");\n      this.updateDnD({\n        variables: {\n          userid: this.props.user,\n          draggableId: draggableId,\n          destination_droppableId: destination.droppableId,\n          destination_index: destination.index,\n          source_droppableId: source.droppableId,\n          source_index: source.index\n        }\n      });\n    };\n\n    this.state = initial_state;\n  }\n\n  componentDidMount() {// this.props.client.resetStore() \n  }\n\n  render() {\n    // const socket = socketIOClient(\"http://localhost:4001/\")\n    if (this.props.user == undefined) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Mutation, {\n      mutation: UPDATE_DND_ITEM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, updateDnDItem => {\n      this.updateDnD = updateDnDItem;\n      return React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Schedule, {\n        socket: this.props.socket,\n        user: this.props.user,\n        col: this.state.schedule_columns,\n        items: this.state.items,\n        columnOrder: this.state.dayOrder,\n        handleDelete: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Spots, {\n        socket: this.props.socket,\n        user: this.props.user,\n        col: this.state.spots_columns,\n        items: this.state.items,\n        columnOrder: this.state.columnOrder,\n        handleDelete: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(Map, {\n        socket: this.props.socket,\n        user: this.props.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })));\n    });\n  }\n\n}\n\nexport default withApollo(Main);","map":{"version":3,"sources":["/Users/isabel/Desktop/PlanNGo/src/containers/Main.js"],"names":["React","Component","DragDropContext","Schedule","Spots","Map","Redirect","initial_state","Mutation","UPDATE_DND_ITEM","withApollo","IndexofProperty","array","attr","value","i","length","FindCol","s","tmp","parseInt","substring","lastIndexOf","Main","constructor","props","handleDelete","id","colid","console","log","col","state","schedule_columns","spots_columns","items","update_col","update_items","item_idx","splice","setState","onDragEnd","result","destination","source","draggableId","droppableId","index","socket","emit","updateDnD","variables","userid","user","destination_droppableId","destination_index","source_droppableId","source_index","componentDidMount","render","undefined","updateDnDItem","dayOrder","columnOrder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import socketIOClient from \"socket.io-client\";\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport './../App.css';\nimport Schedule from './schedule/Schedule'\nimport Spots from './spots/Spots'\nimport Map from './map/Map'\n// import Map from './map/GmapObj' //for testing\nimport { Redirect } from 'react-router-dom';\nimport initial_state from '../Initial';\nimport { Mutation } from 'react-apollo'\nimport { UPDATE_DND_ITEM } from '../graphql';\nimport { withApollo } from 'react-apollo';\n\nfunction IndexofProperty(array, attr, value) {\n  for(var i = 0; i < array.length; i += 1) {\n      if(array[i] === value) {\n          return i;\n      }\n  }\n  return -1;\n}\nfunction FindCol(s) {\n  let tmp = parseInt(s.substring(s.lastIndexOf('-')+1), 10);\n  return tmp;\n}\n\nclass Main extends Component {\n  constructor(props) {\n\t\tsuper(props);\n\t\tthis.state = initial_state;\n  }\n  \n  componentDidMount(){\n    // this.props.client.resetStore() \n  }\n\n  handleDelete = (id, colid) => {\n    console.log(id, colid);\n    let col;\n    // if (colid === \"droppable-4\") col = {...this.state.schedule_columns};\n    if (FindCol(colid) >= 4) col = {...this.state.schedule_columns};    \n    else col = {...this.state.spots_columns};\n    let items = {...this.state.items};\n\n    let update_col = col;\n    let update_items = items;\n\t\tlet item_idx = IndexofProperty(col[colid].items, 'id', id);\n\n    if (item_idx !== -1) {\n      delete update_items[id];\n      update_col[colid].items.splice(item_idx, 1);\n      console.log(update_items);\n      console.log(update_col);\n      // if (colid === \"droppable-4\") {\n      if (FindCol(colid) >= 4) {\n        this.setState({\n          schedule_columns: update_col,\n          items: update_items\n        });\n      }\n      else {\n        this.setState({\n          spots_columns: update_col,\n          items: update_items\n        });\n      }\n    }\n  }\n\n  onDragEnd = (result)=> {\n\t\tconst { destination, source, draggableId } = result;\n\t\tif (!destination) {\n            return\n\t\t}\n\t\tif (destination.droppableId === source.droppableId &&\n\t\t\tdestination.index === source.index){\n\t\t\t\treturn;\n    }\n    this.props.socket.emit(\"resetRoute\", \"reset from drag\")\n    this.updateDnD({\n      variables: {\n        userid: this.props.user,\n        draggableId: draggableId,\n        destination_droppableId: destination.droppableId,\n        destination_index: destination.index,\n        source_droppableId: source.droppableId,\n        source_index: source.index, \n      }\n    });\n  }\n  \n  render() {\n    // const socket = socketIOClient(\"http://localhost:4001/\")\n    if (this.props.user == undefined) {\n      return <Redirect to=\"/login\"/>;\n    }\n    \n    return (\n      <Mutation mutation={UPDATE_DND_ITEM}>{\n        updateDnDItem => {\n          this.updateDnD = updateDnDItem;\n          return (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n              <div className=\"main\">\n                <Schedule socket={this.props.socket} user = {this.props.user} col={this.state.schedule_columns} items={this.state.items} columnOrder={this.state.dayOrder} handleDelete={this.handleDelete}/>\n                <Spots socket={this.props.socket} user = {this.props.user} col={this.state.spots_columns} items={this.state.items} columnOrder={this.state.columnOrder} handleDelete={this.handleDelete}/>\n                <Map socket={this.props.socket} user = {this.props.user}/>\n              </div>\n            </DragDropContext>\n          );\n        }\n      }\n      </Mutation>\n    );\n  }\n}\n\nexport default withApollo(Main);"]},"metadata":{},"sourceType":"module"}