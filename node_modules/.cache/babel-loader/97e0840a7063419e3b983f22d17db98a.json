{"ast":null,"code":"var _jsxFileName = \"/Users/isabel/Desktop/PlanNGo/src/containers/NewProject.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport { withRouter } from 'react-router-dom';\nimport { withApollo, Mutation } from 'react-apollo';\nimport Fab from '@material-ui/core/Fab';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport PropTypes from 'prop-types';\nimport MyDayPick from './../components/MyDayPick';\nimport CryptoJS from 'crypto-js';\nimport { LOGIN_MATCH } from '../graphql/queries';\nimport { CREATE_USER } from '../graphql';\nimport '../App.css';\nconst styles = {\n  fab: {\n    margin: 1\n  },\n  extendedIcon: {\n    marginRight: 1\n  },\n  loginWrapper: {\n    marginTop: 10\n  },\n  outterWrapper: {\n    margin: 0\n  },\n  innerWrapper: {\n    marginTop: 50,\n    textAlign: \"center\"\n  },\n  textField: {\n    marginLeft: 1,\n    marginRight: 1\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  input: {\n    color: \"rgba(255, 255, 255, 0.65)\"\n  }\n};\n\nclass NewProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserChange = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handleDestinationrChange = e => {\n      this.setState({\n        destination: e.target.value\n      });\n    };\n\n    this.handlePasswordChange = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handleDaySubmit = days => {\n      this.setState({\n        days: days\n      });\n      console.log(\"DAYS\", days);\n    };\n\n    this.onSubmit = e => {\n      console.log(\"onSubmit\");\n      let collision = false;\n      const IDandPassword = this.state.username + this.state.password;\n      const myHash = CryptoJS.SHA256(IDandPassword).toString(CryptoJS.enc.Hex);\n      this.props.client.query({\n        fetchPolicy: 'network-only',\n        query: LOGIN_MATCH,\n        variables: {\n          hash: myHash\n        }\n      }).then(result => {\n        if (result.data.loginMatch) {\n          collision = true;\n          console.log(\"loginMatch\", result.data.loginMatch);\n        } else {\n          // Mutation here\n          console.log(\"onSubmit mutation\", this.state.days);\n\n          if (this.state.days.length !== 0) {\n            this.userSubmit({\n              variables: {\n                hash: myHash,\n                projectName: this.state.username,\n                totalDays: this.state.days // firstDay: this.state.days[0]\n\n              }\n            });\n          }\n        }\n\n        if (this.state.username === \"\" || collision || this.state.days.length === 0) {\n          this.setState({\n            collision_error: true\n          });\n          return;\n        }\n\n        this.props.history.push('/login');\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      destination: \"\",\n      collision_error: false,\n      days: []\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    console.log(\"NewProject state\", this.state.days);\n    return React.createElement(Mutation, {\n      mutation: CREATE_USER,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, submit => {\n      this.userSubmit = submit;\n      return React.createElement(\"div\", {\n        className: classes.outWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.innerWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: classes.container,\n        noValidate: true,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"project-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"project-wrapper-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"project_name\",\n        label: \"Project Name\",\n        className: classes.textField,\n        onChange: this.handleUserChange,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputProps: {\n          className: classes.input\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"password\",\n        label: \"Password\",\n        className: classes.textField,\n        onChange: this.handlePasswordChange,\n        type: \"password\",\n        autoComplete: \"current-password\",\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputProps: {\n          className: classes.input\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"destination\",\n        label: \"Destination (optional)\",\n        className: classes.textField,\n        onChange: this.handleDestinationChange,\n        margin: \"normal\",\n        variant: \"outlined\",\n        InputProps: {\n          className: classes.input\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"project-wrapper-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(MyDayPick, {\n        daySubmit: this.handleDaySubmit,\n        InNewProject: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: classes.loginWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        onClick: this.onSubmit,\n        color: \"primary\",\n        variant: \"extended\",\n        \"aria-label\": \"create\",\n        className: classes.fab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        className: classes.extendedIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), \"Create\"))));\n    });\n  }\n\n}\n\nNewProject.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withApollo(withRouter(withStyles(styles)(NewProject)));","map":{"version":3,"sources":["/Users/isabel/Desktop/PlanNGo/src/containers/NewProject.js"],"names":["React","withStyles","withRouter","withApollo","Mutation","Fab","TextField","AddIcon","PropTypes","MyDayPick","CryptoJS","LOGIN_MATCH","CREATE_USER","styles","fab","margin","extendedIcon","marginRight","loginWrapper","marginTop","outterWrapper","innerWrapper","textAlign","textField","marginLeft","link","textDecoration","input","color","NewProject","Component","constructor","props","handleUserChange","e","setState","username","target","value","handleDestinationrChange","destination","handlePasswordChange","password","handleDaySubmit","days","console","log","onSubmit","collision","IDandPassword","state","myHash","SHA256","toString","enc","Hex","client","query","fetchPolicy","variables","hash","then","result","data","loginMatch","length","userSubmit","projectName","totalDays","collision_error","history","push","render","classes","submit","outWrapper","container","className","handleDestinationChange","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport {withRouter} from 'react-router-dom'\nimport { withApollo, Mutation } from 'react-apollo';\nimport Fab from '@material-ui/core/Fab';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport PropTypes from 'prop-types';\nimport MyDayPick from './../components/MyDayPick'\nimport CryptoJS from 'crypto-js';\nimport { LOGIN_MATCH } from '../graphql/queries';\nimport { CREATE_USER } from '../graphql';\nimport '../App.css'\nconst styles = {\n    fab: {\n      margin: 1\n    },\n    extendedIcon: {\n      marginRight: 1\n    },\n    loginWrapper:{\n      marginTop: 10\n    },\n    outterWrapper: {\n        margin: 0,\n    },\n    innerWrapper:{\n        marginTop: 50,\n        textAlign: \"center\"\n    },\n    textField: {\n        marginLeft: 1,\n        marginRight: 1\n    },\n    link:{\n        textDecoration: \"none\"\n    },\n    input:{\n        color: \"rgba(255, 255, 255, 0.65)\"\n    }\n}\n\nclass NewProject extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            destination: \"\",\n            collision_error: false,\n            days: []\n            \n        }\n      }\n    handleUserChange = e => {this.setState({\n        username : e.target.value\n    })} \n\n    handleDestinationrChange = e => {this.setState({\n        destination : e.target.value\n    })} \n\n    handlePasswordChange = e => {this.setState({\n        password : e.target.value\n    })} \n\n    handleDaySubmit = days => {\n        this.setState({\n            days: days\n        })\n        console.log(\"DAYS\",days)\n    }\n\n    onSubmit = e => {\n        console.log(\"onSubmit\")\n        let collision = false\n        const IDandPassword = this.state.username + this.state.password\n        const myHash = CryptoJS.SHA256(IDandPassword).toString(CryptoJS.enc.Hex)\n        this.props.client.query({fetchPolicy: 'network-only', query: LOGIN_MATCH, variables:{hash: myHash}}).then(result => {\n            if(result.data.loginMatch){\n                collision = true\n                console.log(\"loginMatch\",result.data.loginMatch)\n            }\n            else{\n                // Mutation here\n                console.log(\"onSubmit mutation\", this.state.days)\n                if (this.state.days.length !== 0){\n                    this.userSubmit({\n                        variables: {\n                            hash: myHash,\n                            projectName: this.state.username,\n                            totalDays: this.state.days,\n                            // firstDay: this.state.days[0]\n                        }\n                    })\n                }\n            }  \n\n            if(this.state.username === \"\" || collision || this.state.days.length === 0){\n                this.setState({\n                    collision_error: true\n                })\n                return\n            }\n\n            this.props.history.push('/login')\n        })\n       \n    }\n\n    render() {\n        const {classes} = this.props\n        console.log(\"NewProject state\", this.state.days)\n        return(\n            <Mutation mutation={CREATE_USER}>{\n                submit => {\n                this.userSubmit = submit\n                return(\n                <div className={classes.outWrapper}>\n                    <div className={classes.innerWrapper}>\n                        <form className={classes.container} noValidate autoComplete=\"off\">\n                            <div className=\"project-wrapper\">\n                                <div className=\"project-wrapper-col\">\n                                    <div><TextField\n                                            id=\"project_name\"\n                                            label=\"Project Name\"\n                                            className={classes.textField}\n                                            onChange={this.handleUserChange}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            InputProps={{\n                                                className: classes.input\n                                            }}\n                                        /></div>\n                                    <div><TextField\n                                            id=\"password\"\n                                            label=\"Password\"\n                                            className={classes.textField}\n                                            onChange={this.handlePasswordChange}\n                                            type=\"password\"\n                                            autoComplete=\"current-password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            InputProps={{\n                                                className: classes.input\n                                            }}\n                                        /></div>\n                                    <div><TextField\n                                            id=\"destination\"\n                                            label=\"Destination (optional)\"\n                                            className={classes.textField}\n                                            onChange={this.handleDestinationChange}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            InputProps={{\n                                                className: classes.input\n                                            }}\n                                        /></div>\n                                </div>\n                                <div className=\"project-wrapper-col\"><MyDayPick daySubmit={this.handleDaySubmit} InNewProject={true}/></div>\n                            </div>\n                        </form>\n                        <div className={classes.loginWrapper}>\n                            <Fab onClick={this.onSubmit} color=\"primary\" variant=\"extended\" aria-label=\"create\" className={classes.fab}>\n                                <AddIcon className={classes.extendedIcon} />Create\n                            </Fab>\n                        </div>\n                    </div>\n                </div>)}\n            }</Mutation>\n        )\n    }\n}\n\nNewProject.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withApollo(withRouter(withStyles(styles)(NewProject)));"]},"metadata":{},"sourceType":"module"}