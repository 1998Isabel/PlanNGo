{"ast":null,"code":"var _jsxFileName = \"/Users/isabel/Desktop/PlanNGo/src/components/MyDayPick.js\";\nimport React, { Component } from 'react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport moment from 'moment';\nimport 'react-day-picker/lib/style.css';\nimport './../App.css';\nexport default class MyDayPick extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRangeDays = e => {\n      e.preventDefault(); // do not redirect\n\n      let days = [];\n      let day = this.state.from;\n      days.push(moment(day).format('YYYY/MM/DD'));\n\n      while (!moment(day).isSame(this.state.to)) {\n        day = moment(day).add(1, 'days').toDate(); // console.log(day)\n\n        days.push(moment(day).format('YYYY/MM/DD')); // console.log(days)\n      }\n\n      this.setState({\n        days: days,\n        submitted: true\n      });\n\n      if (this.props.InNewProject) {\n        this.props.daySubmit(days);\n      } else {\n        this.props.onClick(days); // if days.length >= 1, \n        // updateDate mutation here\n        // userid = this.props.user\n        // variables:{userid: this.props.user, days:days}\n      }\n    };\n\n    this.getInitialState = () => {\n      return {\n        from: undefined,\n        to: undefined,\n        days: [],\n        submitted: false\n      };\n    };\n\n    this.handleDayClick = day => {\n      const range = DateUtils.addDayToRange(day, this.state);\n      this.setState(range);\n    };\n\n    this.handleResetClick = () => {\n      this.setState(this.getInitialState());\n    };\n\n    this.state = this.getInitialState();\n  }\n\n  render() {\n    const _this$state = this.state,\n          from = _this$state.from,\n          to = _this$state.to;\n    const modifiers = {\n      start: from,\n      end: to\n    };\n    console.log(\"In my day pick\", this.state);\n    return React.createElement(\"div\", {\n      className: \"RangeExample\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, !from && !to && 'Please select the first day.', from && !to && 'Please select the last day.', from && to && \"\".concat(moment(from).format('YYYY/MM/DD'), \" to\\n                \").concat(moment(to).format('YYYY/MM/DD')), ' ', from && to && React.createElement(\"button\", {\n      className: \"link\",\n      onClick: this.handleResetClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Reset\"), from && to && React.createElement(\"button\", {\n      className: \"link\",\n      onClick: this.getRangeDays,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Submit\")), this.state.submitted ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Submitted successfully!\") : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(DayPicker, {\n      className: \"Selectable\",\n      numberOfMonths: this.props.numberOfMonths,\n      selectedDays: [from, {\n        from,\n        to\n      }],\n      modifiers: modifiers,\n      onDayClick: this.handleDayClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\nMyDayPick.defaultProps = {\n  numberOfMonths: 1\n};","map":{"version":3,"sources":["/Users/isabel/Desktop/PlanNGo/src/components/MyDayPick.js"],"names":["React","Component","DayPicker","DateUtils","moment","MyDayPick","constructor","props","getRangeDays","e","preventDefault","days","day","state","from","push","format","isSame","to","add","toDate","setState","submitted","InNewProject","daySubmit","onClick","getInitialState","undefined","handleDayClick","range","addDayToRange","handleResetClick","render","modifiers","start","end","console","log","textAlign","numberOfMonths","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport DayPicker, { DateUtils } from 'react-day-picker';\nimport moment from 'moment';\nimport 'react-day-picker/lib/style.css';\nimport './../App.css'\n\nexport default class MyDayPick extends Component {\n  static defaultProps = {\n    numberOfMonths: 1,\n  };\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialState();\n  }\n  getRangeDays = (e) => {\n    e.preventDefault(); // do not redirect\n\n    let days = []\n    let day = this.state.from\n    days.push(moment(day).format('YYYY/MM/DD'))\n    while (!moment(day).isSame(this.state.to)) {\n      day = moment(day).add(1, 'days').toDate()\n      // console.log(day)\n      days.push(moment(day).format('YYYY/MM/DD'));\n      // console.log(days)\n    }\n    this.setState({days: days, submitted:true})\n    if (this.props.InNewProject) {\n      this.props.daySubmit(days);\n    }\n    else {\n      this.props.onClick(days)\n      // if days.length >= 1, \n      // updateDate mutation here\n      // userid = this.props.user\n      // variables:{userid: this.props.user, days:days}\n    }\n  }\n  getInitialState = () => {\n    return {\n      from: undefined,\n      to: undefined,\n      days: [],\n      submitted: false\n    };\n  }\n  handleDayClick = (day) => {\n    const range = DateUtils.addDayToRange(day, this.state);\n    this.setState(range);\n  }\n  handleResetClick = () => {\n    this.setState(this.getInitialState());\n  }\n  render() {\n    const { from, to } = this.state;\n    const modifiers = { start: from, end: to };\n    console.log(\"In my day pick\", this.state)\n    return (\n      <div className=\"RangeExample\">\n        <p style={{ textAlign: \"center\" }}>\n          {!from && !to && 'Please select the first day.'}\n          {from && !to && 'Please select the last day.'}\n          {from &&\n            to &&\n            `${moment(from).format('YYYY/MM/DD')} to\n                ${moment(to).format('YYYY/MM/DD')}`}{' '}\n          \n            {from &&\n              to && (\n                <button className=\"link\" onClick={this.handleResetClick}>\n                  Reset\n                </button>\n              )}\n            {from &&\n              to && (\n            <button className=\"link\" onClick={this.getRangeDays}>\n              Submit\n            </button>\n            )}\n        </p>\n        {this.state.submitted?<p>Submitted successfully!</p>:<p></p>}\n        <DayPicker\n          className=\"Selectable\"\n          numberOfMonths={this.props.numberOfMonths}\n          selectedDays={[from, { from, to }]}\n          modifiers={modifiers}\n          onDayClick={this.handleDayClick}\n        />\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}